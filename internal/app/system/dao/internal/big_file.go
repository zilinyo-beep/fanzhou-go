// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BigFileDao is the data access object for table big_file.
type BigFileDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns BigFileColumns // columns contains all the column names of Table for convenient usage.
}

// BigFileColumns defines and stores column names for table big_file.
type BigFileColumns struct {
	Id        string //
	Name      string // 文件名称
	Size      string // 文件大小
	Path      string // 文件相对路径
	FullPath  string // 文件绝对路径
	MimeType  string // 文件类型
	Source    string // 文件来源  0 - 本地，1 - 腾讯云 2 - 七牛云
	Describe  string // 描述
	Md5       string // md5
	CreatedBy string //
	UpdatedBy string //
	CreatedAt string //
	UpdatedAt string //
	DeletedAt string //
}

// bigFileColumns holds the columns for table big_file.
var bigFileColumns = BigFileColumns{
	Id:        "id",
	Name:      "name",
	Size:      "size",
	Path:      "path",
	FullPath:  "full_path",
	MimeType:  "mime_type",
	Source:    "source",
	Describe:  "describe",
	Md5:       "md5",
	CreatedBy: "created_by",
	UpdatedBy: "updated_by",
	CreatedAt: "created_at",
	UpdatedAt: "updated_at",
	DeletedAt: "deleted_at",
}

// NewBigFileDao creates and returns a new DAO object for table data access.
func NewBigFileDao() *BigFileDao {
	return &BigFileDao{
		group:   "default",
		table:   "big_file",
		columns: bigFileColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BigFileDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BigFileDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BigFileDao) Columns() BigFileColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BigFileDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BigFileDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BigFileDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
